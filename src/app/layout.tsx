'use client';

import { Geist, Geist_Mono } from 'next/font/google';
import { usePathname } from 'next/navigation';
import { useEffect, useRef, useState } from 'react';
import './globals.css';
import BreadCrumbs from './layout/breadcrumbs/Breadcrumb';
import Footer from './layout/footer/footer';
import Header from './layout/header/header';
import PageContainer from './layout/page-container/page-container';

const geistSans = Geist({
    variable: '--font-geist-sans',
    subsets: ['latin'],
});

const geistMono = Geist_Mono({
    variable: '--font-geist-mono',
    subsets: ['latin'],
});

/* TODO :: ThemeRegistry로 변경
export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};
*/

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const pathname = usePathname();
    const path = pathname.split('/');
    const page = path.at(-1);

    const [containerHeight, setContainerHeight] = useState<string | null>(null);
    const headerRef = useRef<HTMLElement | null>(null);
    const footerRef = useRef<HTMLElement | null>(null);
    const containerRef = useRef<HTMLDivElement | null>(null);

    const isHome = page == '';
    const isLogin = pathname.includes('login');

    useEffect(() => {
        if (headerRef.current && footerRef.current && containerRef.current) {
            const h = `calc(100vh - ${headerRef.current?.offsetHeight + footerRef.current?.offsetHeight}px)`;

            setContainerHeight(h);
        }
    }, [containerHeight]);

    return (
        <html lang="ko">
            <body
                className={`${geistSans.variable} ${geistMono.variable} antialiased w-full h-full bg-blue-50`}
            >
                <Header ref={headerRef} />
                <PageContainer height={containerHeight || 'auto'} ref={containerRef} title="예시">
                    {!isHome && !isLogin && <BreadCrumbs />}
                    {children}
                </PageContainer>
                <Footer ref={footerRef} />
            </body>
        </html>
    );
}
